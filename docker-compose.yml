services:
  nginx:
    image: nginx:latest
    container_name: tasty_nginx
    volumes:
      - ./:/var/www/
      #- ./_docker/nginx/conf.d:/etc/nginx/conf.d/
    ports:
      - "8080:80"
    depends_on:
      - api-service
      - queue-service
    networks:
      - tasty_network

#  php:         - для сощдания базового образа Dockerfile (чтобы не будлировать код).
#   build:
#     context: ./_docker/php
#     dockerfile: Dockerfile
#   image: tasty_php:latest

#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    container_name: tasty_frontend
#    restart: always
#    working_dir: /var/www/html
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    ports:
#      - "3000:3000"
#    networks:
#      - tasty_network

  api-service:
    build:
      context: ./backend/api-service
      dockerfile: Dockerfile
    container_name: tasty_api
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./backend/api-service:/var/www/html
      - ./_docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./_docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./_docker/supervisor/api.conf:/etc/supervisor/conf.d/supervisord.conf
    ports:
      - "8000:8000"
      - "9000:9000"
    depends_on:
      - mysql
      - redis
    networks:
      - tasty_network
    env_file:
      - .env

  queue-service:
    build:
      context: ./backend/queue-service
      dockerfile: Dockerfile
    container_name: tasty_queue
    restart: always
    working_dir: /var/www/html
    #command: ["php", "artisan", "queue:work"]
    volumes:
      - ./backend/queue-service:/var/www/html
      - ./_docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./_docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./_docker/supervisor/api.conf:/etc/supervisor/conf.d/supervisord.conf
    depends_on:
      - redis
      - api-service
    networks:
      - tasty_network
    env_file:
      - .env

  mysql:
    image: mysql:9
    container_name: tasty_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - tasty_network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: tasty_phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - tasty_network

  redis:
    image: redis:latest
    container_name: tasty_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - tasty_network

networks:
  tasty_network:
    driver: bridge
    name: tasty_network

volumes:
  mysql_data:
