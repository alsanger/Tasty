services:
#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    container_name: tasty_frontend
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    networks:
#      - tasty_network

  api-service:
    build:
      context: ./backend/api-service
      dockerfile: Dockerfile
    container_name: tasty_api
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend/api-service:/var/www/html
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    networks:
      - tasty_network

  queue-service:
    build:
      context: ./backend/queue-service
      dockerfile: Dockerfile
    container_name: tasty_queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: ["php", "artisan", "queue:work"]
    volumes:
      - ./backend/queue-service:/var/www/html
    depends_on:
      - redis
    networks:
      - tasty_network

  mysql:
    image: mysql:8.0
    container_name: tasty_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - tasty_network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: tasty_mysql
    networks:
      - tasty_network

  redis:
    image: redis:latest
    container_name: tasty_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tasty_network

networks:
  tasty_network:
    driver: bridge

volumes:
  mysql_data:
